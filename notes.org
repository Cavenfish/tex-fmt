#+title: tex-fmt
* Tasks
** TODO Skipping a line seems to break linums
** TODO Indent does not return to zero message
*** Should show last zero-indented line
* Release process
** Update release notes
*** git log --oneline --no-merges vX.X.X main
*** Write in NEWS.md
** Update version number in Cargo.toml
** Update Nix flake and lock
*** Check for new NixOS version (nixos-XX.XX)
*** just nix
** Update Rust version
*** just upgrade
** Run tests
*** just
*** just perf
*** Update performance results in README.md
** Push to GitHub and check tests pass
** Create a git tag
*** git tag vX.X.X
*** git push --tags
** Publish to crates.io with cargo publish
** Publish GitHub release with notes
*** GitHub binaries published automatically with actions
** Publish in nixpkgs
*** Check out master branch of nixpkgs fork
*** git fetch upstream
*** git rebase upstream/master
*** git push --force-with-lease origin master
*** git branch -d update-tex-fmt
*** git switch --create update-tex-fmt upstream/master
*** nvim pkgs/by-name/te/tex-fmt/package.nix
*** Update version and invalidate src.hash and cargoHash
*** nix-build -A tex-fmt
*** Fix both hashes, get a successful build
*** git commit -m "tex-fmt: X.X.X -> Y.Y.Y"
*** git push --set-upstream origin HEAD
*** Go to GitHub and create a pull request
*** Submit pull request and check relevant boxes
* Configuration files
** Configuration file precedence
*** Config file passed with --config
*** Config file in directory where tex-fmt is executed
*** If in git repo, parent directories from execution dir to project root
*** ~/.config/tex-fmt/ or equivalent
*** Default tex-fmt settings
** Finally CLI arguments overwrite any selected config file
** Implementation
*** User supplies cli arguments
**** Let cli_args = clap_parse()
**** This should automatically check for errors
**** Use options for non-supplied arguments
*** If --config is passed
**** Assert supplied path exists
**** Let config_args = read_from_cli(config_file)
*** Else
**** Let config_args = read_from_cli() from other sources
*** Resolve merges
**** Let args = cli_args
**** Replace Nones in args with Somes in config_args
**** Replace Nones in args with default values
*** Return args for final validation
