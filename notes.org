#+title: tex-fmt
* Tasks
** Check other latex files
** Tidy code
** Documentation
** Try wrapping spaceless lines
* Features
** Aim for a single pass of wrapping and indenting
*** Three lists of strings
**** 1: lines of original file
**** 2: lines in processing queue
**** 3: lines of formatted file
*** Logic flow
**** If the queue is empty
***** Take a line from the original file and put it in the queue
**** Else
***** Indent the first line in the queue with the global indentation state
***** Keep the new indentation state in a temporary variable
***** If it then needs wrapping
****** Wrap it into several lines and push them all back onto the queue
***** Else
****** Move it from the queue to the output file
****** Update the global indentation state from the temporary variable
*** New structs
**** File{name, text}
**** Program{args, logs}
**** Format{linum, ignore, indent, leave}
*** Rename leave to verbatim
*** Better logging helper functions
*** Also include environments on new line logic
*** Consider
**** Indenting
**** Wrapping
**** Ignores, leaves, comments
**** Removing trailing spaces (this should also be part of wrapping)
**** Remove extra newlines (fine for now)
**** Environments on new lines (fine for now)
**** Remove tabs (fine for now)
*** Ideas
**** Keep a State struct which contains all formatting info
***** Current old linum
***** Current new linum
***** Current indentation level
***** Current ignore status
***** Current leave status
**** For each line in the queue
***** indent(line, state) -> (new_line, temp_state)
***** wrap(line, state) -> line
** Parsing with texlab
*** https://github.com/rust-lang/rust-analyzer/blob/master/docs/dev/syntax.md
*** https://github.com/latex-lsp/texlab/tree/master/crates/parser
** TODO Put higher categories tex and bib tests back
** TODO Logging is messy, maybe include info in the state
** TODO State should include logs, file name
** TODO Line type
