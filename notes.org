#+title: tex-fmt
* Tasks
** TODO Actions yaml long lines
** TODO Indicate which args are CLI and which are config
** TODO Publish lib HTML docs
* Options and documentation
** Args struct
** OptionArgs struct
** OptionArgs new function
** Implement Default, Display, from for Args
** CLI command
** CLI args parser function
** Config args parser function
** Args resolver
** GitHub README
* Release process
** DONE Update release notes in NEWS.md
*** git log --oneline --no-merges vX.X.X..main
** DONE Update version number in Cargo.toml
** DONE Update version number for pre-commit in README
** DONE Update Nix flake and lock
*** just nix
*** nix develop
** DONE Update Rust version
*** just upgrade
** DONE Run tests
*** just
*** just perf
*** Update performance results in README.md
** TODO Push to GitHub and check tests pass
** TODO Create a git tag
*** git tag vY.Y.Y
*** git push --tags
** TODO Publish to crates.io with cargo publish
*** Pass --allow-dirty if notes.org has changed
** TODO Publish GitHub release with notes from NEWS.md
*** GitHub binaries published automatically with actions
** TODO Publish in nixpkgs
*** Check out master branch of nixpkgs fork
*** git fetch upstream
*** git rebase upstream/master
*** git fetch
*** git push --force-with-lease origin master
*** git branch -d update-tex-fmt
*** git switch --create update-tex-fmt upstream/master
*** nvim pkgs/by-name/te/tex-fmt/package.nix
*** Update version and invalidate src.hash and cargoHash
*** nix-build -A tex-fmt
*** Fix both hashes, get a successful build
*** git add pkgs/by-name/te/tex-fmt/package.nix
*** git commit -m "tex-fmt: X.X.X -> Y.Y.Y"
*** git push --set-upstream origin HEAD
*** Go to GitHub and create a pull request
*** Submit pull request and check relevant boxes
** TODO Tidy repository
*** Commit any new changes to NEWS.md or notes.org
