name: "CI"
on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
jobs:
  test:
    name: Cargo test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Test
        run: cargo test
  format:
    name: Cargo format (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Format
        run: cargo fmt --check
  cross:
    name: Cargo cross build (${{ matrix.target }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cross
      - name: Build
        run: cross build --target ${{ matrix.target }}
  wasm:
    name: Cargo wasm build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: jetli/wasm-bindgen-action@v0.2.0
      - name: Build wasm
        run: cargo build -r --lib --target wasm32-unknown-unknown
      - name: Bind wasm
        run: |
          wasm-bindgen --target web --out-dir web/pkg \
            target/wasm32-unknown-unknown/release/tex_fmt.wasm
      - name: Optimize wasm
        uses: NiklasEi/wasm-opt-action@v2
        with:
          options: -Oz
          file: web/pkg/tex_fmt_bg.wasm
          output: web/pkg/tex_fmt_bg.wasm
  nix:
    name: Nix build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v25
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: DeterminateSystems/magic-nix-cache-action@v2
    - run: nix build
    - run: nix flake check --all-systems
